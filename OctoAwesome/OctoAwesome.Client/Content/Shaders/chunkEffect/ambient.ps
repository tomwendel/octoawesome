#version 130
uniform float AmbientIntensity;
uniform vec4 AmbientColor;
uniform float DiffuseIntensity;
uniform vec4 DiffuseColor;
uniform vec3 DiffuseDirection;
uniform sampler2DArray BlockTextures;
uniform float OverrideLightLevel;

uniform sampler2DShadow ShadowMap;

in vec3 psNormal;
in vec2 psTexcoord;
flat in uint psTexIndex;
in float psLightLevel;
in vec4 shadowCoord;

out vec4 outColor;
void main()
{
    float visibility = (clamp(texture(ShadowMap, vec3(shadowCoord.xy/shadowCoord.w,clamp(shadowCoord.z + 0.0001, 0.0, 1.0))), 0.0, 1.0) + 1.0) / 2.0;
	vec4 texColor = texture(BlockTextures,vec3(psTexcoord,psTexIndex));
	vec4 ambient = AmbientColor * AmbientIntensity * max(psLightLevel, OverrideLightLevel) * visibility;
	vec4 diffuse = clamp(dot(-DiffuseDirection,psNormal),0.0,1.0) * DiffuseColor * DiffuseIntensity;
	outColor = texColor * clamp(ambient + vec4(diffuse.rgb,1.0),0.0,1.0);
}
